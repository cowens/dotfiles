# make control-s not freeze the terminal
stty -ixon

# zsh specific
PROMPT='%n@%m:%~%(#.#.$) '

# make up/down arrows move intelligently through
# history (ie include the stuff before the cursor
# as a requirement to match)
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line

# make v when in command mode open the command in 
# $EDITOR

autoload -z edit-command-line
zle -N edit-command-line
bindkey -M vicmd e edit-command-line

# start up servers if they aren't running
# $HOME/bin/servers.tmux

source ~/.path

# force history to be large enough and unique
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
export HISTFILESIZE=1000000
export HISTSIZE=10000
export HISTSAVE=1000000

if [[ "$TERM" == "xterm-kitty" ]]; then
	export TERMINFO=/Applications/kitty.app/Contents/Resources/kitty/terminfo
	for n in $(kitty @ ls | jq -r '.[] | .id'); do
		if [[ "$n" == "1" ]]; then
			kitty @ set-window-title -m id:$n "term"
		else
			kitty @ set-window-title -m id:$n "term $n"
		fi
	done
fi

if [[ -f ~/.ssh/agent ]]; then
	eval $(cat ~/.ssh/agent) > /dev/null
	if [[ "$(ps -p $SSH_AGENT_PID -o comm=)" != "ssh-agent" ]]; then
		unset SSH_AGENT_PID
	fi
fi

if [[ -z "$SSH_AGENT_PID" ]]; then
	ssh-agent > ~/.ssh/agent
	eval $(cat ~/.ssh/agent) > /dev/null
fi

export WEZTERM_PID=$(ps -p $$ -oppid=)
